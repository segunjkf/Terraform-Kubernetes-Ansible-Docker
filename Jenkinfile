pipeline {
    agent any
    parameters {
    string(name: 'DEV_ENVIRONMENT', defaultValue: 'development', description: 'development environment')
    string(name: 'STAGING_ENVIRONMENT', defaultValue: 'staging', description: 'staging environment')
    string(name: 'PROD_ENVIRONMENT', defaultValue: 'production', description: 'production environment')
    }
    stages {
        stage ("checkout") {
            steps{
                git branch: 'main', credentialsId: '10f2ee8f-0c24-478d-82e4-1f7e1355cfbe', url: 'https://github.com/segunjkf/Terraform-Kubernetes-Ansible-Docker'
            }
        }
        stage("build Infra") {
            environment {
                AWS_ACCESS_KEY_ID = credentials('aws_access_key_id')
                AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key')
                TF_VAR_env_prefix = 'test'
            }
            steps {
               script {
                   c
                   powershell "terraform init"
                   powershell "terraform plan"
                   }
               }
            }
        }
        stage ("Docker Build") {   
            steps{
                script {
                   echo "About to build docker image"
                powershell "docker build -t kaytheog/java:${BUILD_NUMBER} -f Dockerfile ."
                }
            }
        }
        stage("push to Docker-hub") {
            environment {
                DOCKER_CREDS = credentials('docker-creds')
                DOCKER_CREDS_PSW = credentials("docker_creds_psw")
            }
            steps {
                echo "about to build docker image"
                powershell "docker login -u kaytheog -p ${DOCKER_CREDS_PSW}"
                powershell "docker push kaytheog/java:${BUILD_NUMBER}"
               }
           }

        stage('Deploy to Dev') {
            when {branch 'dev'}
            environment {
               KUBECONFIG = credentials('kubeconfig')
        }
            steps {
                script {
                    dir("kubernetes-files")
                    kubernetesDeploy(configs: "deployment.yml", kubeconfigId: "kubernetes")
        }
      }
    }
        stage('Deploy to Staging') {
            when {branch 'dev'}
            input{message "Deploy staging deployment?"}
            environment {
                KUBECONFIG = credentials('kubeconfig')                   
        }
            steps {
                script {
                    dir("kubernetes-files")
                    kubernetesDeploy(configs: "deployment.yml", kubeconfigId: "kubernetes")
                }
            }
        }
      stage('Deploy to Production') {
         when {branch 'main'}
         input{message "Deploy production deployment?"}
         environment {
           KUBECONFIG = credentials('kubeconfig')
        }
            steps {
                script {
                    dir("kubernetes-files")
                    kubernetesDeploy(configs: "deployment.yml", kubeconfigId: "kubernetes")
                }
            }
        }
}

